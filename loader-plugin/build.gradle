plugins {
    id "xyz.jpenilla.run-paper" version "2.2.3"
    id "io.papermc.paperweight.userdev" version "1.5.11"
}

def targetJavaVersion = project.javaVersion as Integer

dependencies {
    shadow api(project(path: ':loader-common', configuration: 'default'))
    paperweight.paperDevBundle(project.paper_version)
}

shadowJar {
    relocate('io.netty', 'me.mrnavastar.protoweaver.libs.netty') {
        exclude 'io.netty.channel.*'
        exclude 'io.netty.buffer.*'
        exclude 'io.netty.handler.ssl.*'
    }
    relocate "org.bouncycastle", "me.mrnavastar.protoweaver.libs.bouncycastle"

    exclude "META-INF/maven/**"
    exclude "META-INF/native-image/**"

    minimize {
        exclude(dependency("org.bouncycastle:bcpkix-jdk18on:.*"))
    }
    minimize()
}

jar.finalizedBy(shadowJar)

tasks {
    runServer {
        minecraftVersion(project.minecraft_version)
    }
}
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
