plugins {
    id "xyz.jpenilla.run-velocity" version "2.1.0"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = project.maven_group
version = project.mod_version

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://papermc.io/repo/repository/maven-public/"
    }

    maven { url = "https://maven.elytrium.net/repo/" }
    maven { url 'https://repo.codemc.io/repository/maven-releases/' }
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    compileOnly "com.velocitypowered:velocity-proxy:3.2.0-SNAPSHOT"
    //compileOnly "io.netty:netty-all:4.1.95.Final"
    annotationProcessor "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"

    implementation "one.microstream:microstream-storage-embedded:08.01.01-MS-GA"
    //implementation "me.nullicorn:Nedit:2.2.0"
    compileOnly "com.github.retrooper.packetevents:velocity:2.0.2"
}

shadowJar {
    archiveBaseName.set('velocity')
    archiveClassifier.set('')
    archiveVersion.set('')

    minimize()
}

jar.finalizedBy(shadowJar)

tasks {
  runVelocity {
    velocityVersion("3.2.0-SNAPSHOT")
  }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = 16
    targetCompatibility = 16
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })